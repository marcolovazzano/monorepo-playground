name: Release

on:
  workflow_dispatch:

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  release:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      issues: write

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          # an ad-hoc token (PAT) is need in order to permit the "push" to a protected branch (in this case 'main')
          # persist-credentials must be true and the same token is used in semantic-release step
          token: ${{ secrets.SEMANTICRELEASE }}
          # alternatively, it is possible to disable persist-credentials
          # and use the ad-hoc token (PAT) in semantic-release step
          # persist-credentials: 'false
          persist-credentials: 'true'
          # fetch all history for all branches and tags
          fetch-depth: '0'

      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'

      # semantic-release: it comes pre-installed in GitHub actions by default
      - name: Install semantic-release extra plugins
        run: |
              npm install --save-dev \
                semantic-release \
                @semantic-release/commit-analyzer \
                @semantic-release/changelog \
                @semantic-release/git \
                @semantic-release/release-notes-generator \
                @semantic-release/exec \
                conventional-changelog-conventionalcommits

      - name: Create .VERSION file
        run: echo "There are no relevant changes, so no new version is released" > .VERSION

      - name: Release
        env:
          # ad-hoc token (PAT) in order to permit the push on a protected branch
          # without protected branches can be use secrets.GITHUB_TOKEN
          GITHUB_TOKEN: ${{ secrets.SEMANTICRELEASE }}
        run: |
          echo "## **RUN** " >> $GITHUB_STEP_SUMMARY
          npx semantic-release

      - name: Summary
        id: version
        run: |
          nextversion=$(cat .VERSION)
          regex="^([0-9].[0-9].[0-9](-[A-Za-z].[0-9])?)"
          echo "::set-output name=nextversion::$nextversion"

          if [[ $nextversion =~ $regex ]]; then
            echo "✅ Release $nextversion will be published!" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ There are no relevant changes, so no new version is released!" >> $GITHUB_STEP_SUMMARY
          fi
